{"ast":null,"code":"const initiState = {\n  counter: 0\n}; // reducer \n\nexport default function counter() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initiState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case 'INCRESE':\n      return {\n        counter: state.counter + payload\n      };\n\n    case 'DECRESE':\n      return {\n        counter: state.counter - payload\n      };\n\n    case 'RESET':\n      return {\n        counter: 0\n      };\n\n    default:\n      return state;\n  }\n} // Actions\n\nexport const incCount = payload => {\n  return {\n    type: 'INCRESE',\n    payload: payload\n  };\n};\nexport const decCount = payload => {\n  return {\n    type: 'DECRESE',\n    payload: payload\n  };\n};\nexport const resetCount = () => {\n  return {\n    type: 'RESET'\n  };\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/T1000/codes/Week05/Day02/HW/Redux-Lab02/W05D02Lab/src/redusers/counter/counter.js"],"names":["initiState","counter","state","type","payload","incCount","decCount","resetCount"],"mappings":"AAAA,MAAMA,UAAU,GAAC;AACbC,EAAAA,OAAO,EAAC;AADK,CAAjB,C,CAGA;;AACA,eAAe,SAASA,OAAT,GAAiD;AAAA,MAAhCC,KAAgC,uEAA1BF,UAA0B;AAAA,MAAf;AAACG,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAe;;AAE5D,UAAOD,IAAP;AACI,SAAK,SAAL;AACI,aAAM;AAACF,QAAAA,OAAO,EAACC,KAAK,CAACD,OAAN,GAAgBG;AAAzB,OAAN;;AAEA,SAAK,SAAL;AACI,aAAO;AAACH,QAAAA,OAAO,EAACC,KAAK,CAACD,OAAN,GAAgBG;AAAzB,OAAP;;AAEA,SAAK,OAAL;AACE,aAAM;AAAGH,QAAAA,OAAO,EAAE;AAAZ,OAAN;;AAEA;AACI,aAAOC,KAAP;AAXlB;AAaH,C,CAED;;AAEA,OAAO,MAAMG,QAAQ,GAAGD,OAAD,IAAW;AAC9B,SAAM;AACFD,IAAAA,IAAI,EAAC,SADH;AAEFC,IAAAA,OAAO,EAACA;AAFN,GAAN;AAIH,CALM;AAQP,OAAO,MAAME,QAAQ,GAAGF,OAAD,IAAW;AAC9B,SAAM;AACFD,IAAAA,IAAI,EAAC,SADH;AAEFC,IAAAA,OAAO,EAACA;AAFN,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,UAAU,GAAE,MAAI;AACzB,SAAM;AACFJ,IAAAA,IAAI,EAAC;AADH,GAAN;AAGH,CAJM","sourcesContent":["const initiState={\r\n    counter:0\r\n}\r\n// reducer \r\nexport default function counter(state=initiState,{type,payload}){\r\n\r\n    switch(type){\r\n        case 'INCRESE':\r\n            return{counter:state.counter + payload}\r\n\r\n            case 'DECRESE':\r\n                return {counter:state.counter - payload}\r\n\r\n                case 'RESET':\r\n                  return{  counter: 0}\r\n\r\n                  default:\r\n                      return state\r\n    }\r\n}\r\n\r\n// Actions\r\n\r\nexport const incCount =(payload)=>{\r\n    return{\r\n        type:'INCRESE',\r\n        payload:payload,\r\n    }\r\n} \r\n\r\n\r\nexport const decCount =(payload)=>{\r\n    return{\r\n        type:'DECRESE',\r\n        payload:payload\r\n    }\r\n}\r\n\r\nexport const resetCount =()=>{\r\n    return{\r\n        type:'RESET'\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}